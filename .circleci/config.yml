version: 2.1
defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:12
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Authenticate with registry
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
            echo "//registry.yarnpkg.com/:_authToken=$NPM_TOKEN" >> ~/repo/.npmrc
            echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" >> ~/repo/.npmrc
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            - v2-dependencies-
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}
      - run: yarn lint
      - run:
          name: Jest Suite
          command: yarn test:ci --testResultsProcessor="jest-junit"
          environment:
            JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"
      - store_test_results:
          path: reports
      - run:
          name: Format SVGs
          command: yarn format:svgs
      - persist_to_workspace:
          root: ~/repo
          paths: .
  release:
    <<: *defaults
    environment:
      NODE_ENV: production
    steps:
      - run:
          name: Authenticate with registry
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
            echo "//registry.yarnpkg.com/:_authToken=$NPM_TOKEN" >> ~/repo/.npmrc
            echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" >> ~/repo/.npmrc
      - attach_workspace:
          at: ~/repo
      - run:
          name: Semantic Release
          command: yarn semantic-release
      - run:
          name: Deploy Storybook
          command: yarn deploy-storybook --ci --host-token-env-variable=GITHUB_TOKEN
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          context: open-source
          filters:
            tags:
              only: /.*/
      - release:
          context: open-source
          requires:
            - build
          filters:
            branches:
              only: /(master)/
            tags:
              ignore: /.*/
